 #Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)
		
ДействующийДоговор = ПроверкаДоговора();

Если Не ДействующийДоговор Тогда
		Отказ = Истина;
КонецЕсли;
	

	// регистр ВКМ_ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ФактическиПотраченоЧасов) КАК ФактическиПотраченоЧасов,
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Договор.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = &Ссылка
		|	И НЕ ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.ПометкаУдаления
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Договор.ВКМ_СтоимостьЧасаРаботы";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
			// регистр ВКМ_ВыполненныеКлиентуРаботы
		СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * Выборка.СтоимостьЧасаРаботы	;
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Договора = Договор;
		Движение.Клиент = Клиент;
		Движение.КоличествоЧасов = Выборка.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = СуммаКОплате;
		КонецЦикла;
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записать();

ВыполненныеСотрудникомРаботы(Отказ)

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
			
	
		Если ОбменДанными.Загрузка Тогда
		Возврат;
		КонецЕсли;
		
	СообщениеВТелеграм();
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции


Процедура ВыполненныеСотрудникомРаботы(Отказ)
	
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	
	Запрос = Новый Запрос;
Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту) Как ЧасыКОплатеКлиенту,
	|	МАКСИМУМ(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Договор.ВКМ_СтоимостьЧасаРаботы) Как СтавкаЧасаКлиента,
	|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Специалист Как Специалист,
	|	МАКСИМУМ(ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, ""Не назначен"")) КАК ПроцентОтРабот
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник В
	|			(ВЫБРАТЬ
	|				ВКМ_ОбслуживаниеКлиента.Специалист
	|			ИЗ
	|				Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|			ГДЕ
	|				ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Специалист = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Специалист";
	
Запрос.УстановитьПараметр("Ссылка", Ссылка);
Запрос.УстановитьПараметр("Дата", Дата);

РезультатЗапроса = Запрос.Выполнить();

Выборка = РезультатЗапроса.Выбрать();

Если Выборка.Следующий() Тогда
	Если Выборка.ПроцентОтРабот = "Не назначен" Тогда
	Отказ = Истина;
	ОбщегоНазначения.СообщитьПользователю("Не установлен % оплаты от работ");
	Возврат;
	КонецЕсли;
		
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Специалист;
		Движение.ЧасовКОплате = Выборка.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * Выборка.СтавкаЧасаКлиента * Выборка.ПроцентОтРабот / 100;
	
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записать();
КонецЕсли;

КонецПроцедуры

Процедура СообщениеВТелеграм()
		Если ЭтоНовый() Тогда	
	ТекстИзменений = СтрШаблон("Сформирован Новый Заказ:,
	                           |Заказчик: %1,
	                           |Дата:%2;
	                           |Время: %3;	
	                           |Менеджер: %4,
	                           |Описание проблемы: %5",
	                           Клиент,
	                           Формат(ДатаПроведенияРабот,"ДФ=dd/MM/yy;"),
	                           Формат(ВремяНачалаРаботПлан,"ЧФ=; ДЛФ=T;"),
	                           Специалист,
	                           ОписаниеПроблемы);
	                           	
	КонецЕсли;
	
	
	Если Не ЭтоНовый() Тогда 
		Запрос = Новый Запрос; 
		Запрос.Текст = "ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот Как ДатаПроведенияРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлан Как ВремяНачалаРаботПлан,
		|	ВКМ_ОбслуживаниеКлиента.Специалист Как Специалист,
		|	ВКМ_ОбслуживаниеКлиента.Номер Как Номер
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
		|	И (ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот <> &ДатаПроведенияРабот
		|	ИЛИ ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлан <> &ВремяНачалаРаботПлан
		|	ИЛИ ВКМ_ОбслуживаниеКлиента.Специалист <> &Специалист)"; 

		Запрос.УстановитьПараметр("Ссылка", Ссылка); 
        Запрос.УстановитьПараметр("ДатаПроведенияРабот", ДатаПроведенияРабот); 
        Запрос.УстановитьПараметр("ВремяНачалаРаботПлан", ВремяНачалаРаботПлан); 
        Запрос.УстановитьПараметр("Специалист", Специалист); 
        
		Результат = Запрос.Выполнить(); 
		Выборка = Результат.Выбрать(); 
		
		Если Выборка.Следующий() Тогда 
			ДатаПроведенияРаботСт = Выборка.ДатаПроведенияРабот; 
			ВремяНачалаРаботПланСт = Выборка.ВремяНачалаРаботПлан;
			СпециалистСт = Выборка.Специалист;
			НомерЗаказа = Выборка.Номер;
		КонецЕсли; 
		
	ТекстИзменений = СтрШаблон("Изменения в заказе №: %1", НомерЗаказа);	
	
	Если ДатаПроведенияРаботСт <> ДатаПроведенияРабот Тогда 
		ТекстИзмененийДата = СтрШаблон("
		                                  |Дата проведения работ:
		                                  |Было: %1
		                                  |Стало: %2",
		                                  Формат(ДатаПроведенияРаботСт,"ДФ=dd/MM/yy;"),
		                                  Формат(ДатаПроведенияРабот,"ДФ=dd/MM/yy;"));
		ТекстИзменений = ТекстИзменений + ТекстИзмененийДата;                                   
	КонецЕсли;	
	
	Если ВремяНачалаРаботПланСт <> ВремяНачалаРаботПлан Тогда 
		ТекстИзмененийВремяНачала = СтрШаблон("
		                                  |Время начала работ:
		                                  |Было: %1
		                                  |Стало: %2",
		                                  Формат(ВремяНачалаРаботПланСт,"ЧФ=; ДЛФ=T;"),
		                                  Формат(ВремяНачалаРаботПлан,"ЧФ=; ДЛФ=T;"));
		                                  
	ТекстИзменений = ТекстИзменений + ТекстИзмененийВремяНачала;  	                                   
	КонецЕсли;	
		
	Если СпециалистСт <> Специалист Тогда 
		ТекстИзмененийСпециалист = СтрШаблон("
		                                  |Назначенный специалист:
		                                  |Было: %1
		                                  |Стало: %2",
		                                  СпециалистСт,
		                                  Специалист);
		                                  
	ТекстИзменений = ТекстИзменений + ТекстИзмененийСпециалист;	                                  
	КонецЕсли;	
	
	КонецЕсли; 
	
	НовоеСообщение = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
	НовоеСообщение.ТекстСообщения = ТекстИзменений;
	НовоеСообщение.Записать();
	//РезультатОтправки = Неопределено;
	//ВКМ_Телеграм.СформироватьСообщениеТелеграм(ТекстИзменений, РезультатОтправки);
КонецПроцедуры

Функция ПроверкаДоговора()
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Договор.Ссылка
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
		|	И ВКМ_ОбслуживаниеКлиента.Дата
		|		МЕЖДУ ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_ДатаНачалаДействияДоговора И ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_ДатаОкончанияДействияДоговора
		|	И
		|		ВКМ_ОбслуживаниеКлиента.Договор.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
			Возврат Истина;
	Иначе ОбщегоНазначения.СообщитьПользователю("Отсутсвует действующий договор на абонентское обслуживание!");
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
#КонецОбласти

#КонецЕсли



